(()=>{var l={7156:s=>{function a(o,c,_,u,p,e,r){try{var i=o[e](r),t=i.value}catch(g){return void _(g)}i.done?c(t):Promise.resolve(t).then(u,p)}s.exports=function n(o){return function(){var c=this,_=arguments;return new Promise(function(u,p){var e=o.apply(c,_);function r(t){a(e,u,p,r,i,"next",t)}function i(t){a(e,u,p,r,i,"throw",t)}r(void 0)})}},s.exports.__esModule=!0,s.exports.default=s.exports}},f={};function m(s){var a=f[s];if(void 0!==a)return a.exports;var n=f[s]={exports:{}};return l[s](n,n.exports,m),n.exports}(()=>{var s=m(7156).default;let a,n,o,c;const _=e=>{if(e<2)return!1;for(let r=2;r<e;r++)if(e%r==0)return!1;return!0},u=function(){var e=s(function*(r,i){c=!1;for(let t=r;t<i&&!c;t++)_(t)&&(a=t,postMessage({primeNumber:t}),yield p(0))});return function(i,t){return e.apply(this,arguments)}}(),p=e=>new Promise((r,i)=>{setTimeout(r,e)});addEventListener("message",({data:e})=>{switch(console.log("Starting web worker"),e.action){case"start":o=e.max,n=e.min,postMessage({message:`Starting to process primes from ${n} to ${o}`}),u(n,o);break;case"pause":c=!0,postMessage({message:`Pause processing at prime ${a}`});break;case"resume":postMessage({message:`Resume processing primes from ${a} to ${o}`}),u(a,o)}})})()})();